syntax = "proto3";

option csharp_namespace = "Shared.Content.Protos";

package content;

service ContentService {
  rpc ListContent (ListContentRequest) returns (ListContentResponse);
  rpc CreateContent (CreateContentRequest) returns (CreateContentResponse);
  rpc GenerateFromTemplate (GenerateFromTemplateRequest) returns (GenerateFromTemplateResponse);
  rpc GetLatestContentByTemplate (GetLatestContentByTemplateRequest) returns (GetLatestContentByTemplateResponse);
  rpc MarkContentAsStale (MarkContentAsStaleRequest) returns (MarkContentAsStaleResponse);
}

message ContentItem {
  string id = 1;
  string user_id = 2;
  string content_body = 3;
  string created_at = 4;
}

message ListContentRequest {
  string user_id = 1; // Optional filter by user
}

message ListContentResponse {
  repeated ContentItem items = 1;
}

message CreateContentRequest {
  string user_id = 1;
  string content_body = 2;
}

message CreateContentResponse {
  ContentItem item = 1;
}

// Updated messages for template-based generation flow with versioning
message GenerateFromTemplateRequest {
  string template_id = 1;     // Template ID from Backend service
  int32 template_version = 2; // Template version number
  string user_id = 3;         // User who initiated the generation
  string template_name = 4;   // Template name
  string schema = 5;          // JSON schema for generation
  string path = 6;            // Endpoint path
  string project_id = 7;      // Project ID
  string project_title = 8;   // Project title for reference
}

message GenerateFromTemplateResponse {
  string content_id = 1;     // ID of the generated content
  string status = 2;         // Status: "Pending", "Completed", "Failed"
  string message = 3;        // Status message or error details
  string template_id = 4;    // Original template ID
  int32 template_version = 5; // Template version used
  string project_id = 6;     // Project ID for the generated content
  string endpoint_path = 7;  // Endpoint path for serving the content
}

// New messages for getting latest content by template
message GetLatestContentByTemplateRequest {
  string template_id = 1;  // Template ID to get latest content for
}

message GetLatestContentByTemplateResponse {
  string content_id = 1;    // Generated content ID
  string status = 2;        // Status: "Pending", "Completed", "Failed"
  string template_id = 3;  // Template ID
  int32 template_version = 4; // Template version used
  string project_id = 5;   // Project ID
  string endpoint_path = 6; // Endpoint path
  int64 created_at = 7;     // Creation timestamp (Unix milliseconds)
  int64 updated_at = 8;     // Last update timestamp (Unix milliseconds)
  bool success = 9;         // Whether content was found
  string error_message = 10; // Error message if content not found
}

// New messages for marking content as stale
message MarkContentAsStaleRequest {
  string template_id = 1;   // Template ID
  int32 from_version = 2;   // Version from which content should be marked stale
}

message MarkContentAsStaleResponse {
  int32 affected_count = 1; // Number of content items marked as stale
  bool success = 2;         // Whether operation succeeded
  string error_message = 3; // Error message if operation failed
}
