services:
  postgres:
    image: postgres:16-alpine
    hostname: postgres
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: mocktail
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Admin@123
    volumes:
      - postgresdata:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 2s
      retries: 12

  backend:
    build:
      context: services/Backend
      dockerfile: Docker/Dockerfile
    container_name: backend
    depends_on:
      - postgres
    env_file:
      - .env

  content:
    build:
      context: services/Content
      dockerfile: Docker/Dockerfile
    container_name: content
    env_file:
      - .env

  generator:
    build:
      context: services/Generator
      dockerfile: Docker/Dockerfile
    container_name: generator
    env_file:
      - .env

  auth:
    build:
      context: services/Auth
      dockerfile: Docker/Dockerfile
    container_name: auth
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy

  gateway:
    build:
      context: services/Gateway
      dockerfile: Dockerfile
    container_name: gateway
    env_file:
      - .env
    depends_on:
      - backend
      - content
      - generator
      - auth

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    container_name: frontend
    depends_on:
      - gateway

volumes:
  postgresdata:
    external: true
